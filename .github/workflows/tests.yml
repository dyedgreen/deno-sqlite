name: "Build and Test"

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        echo "GIT_AUTHOR_NAME=$(git --no-pager log -s --format="%an")" >> "$GITHUB_ENV";
        echo "GIT_AUTHOR_EMAIL=$(git --no-pager log -s --format="%ae")" >> "$GITHUB_ENV";
    - name: Install Deno
      run: curl -fsSL https://deno.land/x/install/install.sh | sh
    - name: Verify generated files are present
      id: verify
      run: stat build/sqlite.{js,wasm} build/lib/sqlite3.{c,h}
      continue-on-error: true
    - if: steps.verify.outcome == 'failure'
      name: Rebuild generated files
      id: rebuild
      run: |
        export DENO_INSTALL="/home/runner/.deno"
        export PATH="$DENO_INSTALL/bin:$PATH"
        rm -f build/sqlite.{js,wasm} build/lib/sqlite3.{c,h}
        sudo apt-get -y install --no-install-recommends tclsh gcc clang
        cd build
        make setup
        make amalgamation
        make release
    - name: Run the formatter
      run: /home/runner/.deno/bin/deno fmt --check
    - name: Run tests
      run: /home/runner/.deno/bin/deno test --allow-read --allow-write test.ts
    - name: Run benchmarks
      run: /home/runner/.deno/bin/deno run bench.ts
    - if: steps.rebuild.outcome == 'success'
      uses: stefanzweifel/git-auto-commit-action@v4
      name: Commit and push generated files
      with:
        commit_message: |
          Rebuild generated files

          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        commit_author_name: /x/sqlite
        commit_user_email: noreply@github.com
        commit_author: ${{ env.GIT_AUTHOR_NAME }} <${{ env.GIT_AUTHOR_EMAIL }}>
        file_pattern: build/
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
